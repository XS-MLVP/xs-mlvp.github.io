<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Update Request on OpenVerify Courses</title>
    <link>https://open-verify.cc/xs-bpu/en/tags/update-request/</link>
    <description>Recent content in Update Request on OpenVerify Courses</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://open-verify.cc/xs-bpu/en/tags/update-request/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Basic of the Xiangshan Branch Prediction Unit (BPU)</title>
      <link>https://open-verify.cc/xs-bpu/en/docs/basic/01_xsbpu_basic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://open-verify.cc/xs-bpu/en/docs/basic/01_xsbpu_basic/</guid>
      <description>&lt;h2 id=&#34;branch-prediction-block-concept&#34;&gt;Branch Prediction Block Concept&lt;/h2&gt;&#xA;&lt;p&gt;For a general branch predictor, it usually predicts the relevant information of an instruction corresponding to a given PC, such as whether it is a conditional branch instruction or a jump instruction. For conditional branch instructions, it predicts whether it will jump, while for jump instructions, it predicts the jump target. However, predicting instructions one by one is inefficient, leading to slow instruction supply in the frontend.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Redirection and Update Interfaces</title>
      <link>https://open-verify.cc/xs-bpu/en/docs/ports/01_redirect_and_update/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://open-verify.cc/xs-bpu/en/docs/ports/01_redirect_and_update/</guid>
      <description>&lt;h2 id=&#34;branch-prediction-redirectionbranchpredictionredirect&#34;&gt;&lt;strong&gt;Branch Prediction Redirection（BranchPredictionRedirect）&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Interface Definition：&lt;/strong&gt;&lt;code&gt;src/main/scala/xiangshan/frontend/FrontendBundle.scala&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Interface Type：&lt;/strong&gt;&lt;code&gt;BranchPredictionRedirect&lt;/code&gt;&lt;/p&gt;&#xA;&lt;p&gt;This interface defines the redirection requests from the branch prediction unit, mainly used to redirect the state of the branch predictor.&lt;/p&gt;&#xA;&lt;p&gt;The &lt;code&gt;BranchPredictionRedirect&lt;/code&gt; interface inherits from the &lt;code&gt;Redirect&lt;/code&gt; interface and includes many signals, only a subset of which are used by the BPU redirection. The documented structure contains only the interfaces used by the BPU.&lt;/p&gt;&#xA;&lt;p&gt;Redirection requests have two sources: those generated by comparing IFU pre-decode information and those generated during the backend execution process.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
