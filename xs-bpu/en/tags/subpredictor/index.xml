<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Subpredictor on OpenVerify Courses</title>
    <link>https://open-verify.cc/xs-bpu/en/tags/subpredictor/</link>
    <description>Recent content in Subpredictor on OpenVerify Courses</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://open-verify.cc/xs-bpu/en/tags/subpredictor/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>TAGE-SC Branch Predictor</title>
      <link>https://open-verify.cc/xs-bpu/en/docs/modules/02_tage_sc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://open-verify.cc/xs-bpu/en/docs/modules/02_tage_sc/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;p&gt;TAGE-SC is the &lt;strong&gt;primary predictor&lt;/strong&gt; for conditional branches in the Kunming Lake architecture, classified as an Accurate Predictor (APD). TAGE-SC can be seen as two relatively independent components: the prediction part TAGE and the verification part SC.&lt;/p&gt;&#xA;&lt;p&gt;The Tagged Geometric History Length Predictor (TAGE) utilizes &lt;strong&gt;multiple prediction tables with different history lengths&lt;/strong&gt; to exploit &lt;strong&gt;extensive branch history information&lt;/strong&gt;. TAGE predicts whether a branch instruction will be taken or not taken. It consists of a base prediction table and multiple history tables. It first predicts using multiple history tables. If there is no prediction, it uses the prediction from the base table.&#xA;The Statistical Corrector (SC) is a statistical corrector. SC references the prediction results of TAGE and &lt;strong&gt;statistical bias results&lt;/strong&gt;. Based on these two results, it &lt;strong&gt;corrects&lt;/strong&gt; the final prediction result.&lt;/p&gt;</description>
    </item>
    <item>
      <title>ITTAGE Branch Predictor</title>
      <link>https://open-verify.cc/xs-bpu/en/docs/modules/04_ittage/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://open-verify.cc/xs-bpu/en/docs/modules/04_ittage/</guid>
      <description>&lt;h2 id=&#34;function-introduction&#34;&gt;Function Introduction&lt;/h2&gt;&#xA;&lt;p&gt;For general conditional branch instructions, only predicting whether to jump (taken) or not (not taken) is needed. However, for &lt;strong&gt;indirect jumps&lt;/strong&gt;, such as call/jump instructions, it is necessary to predict &lt;strong&gt;where to jump to&lt;/strong&gt; (Target). In order to make TAGE support predicting jump addresses, ITTAGE (Indirect Target TAGE) was introduced.&lt;/p&gt;&#xA;&lt;p&gt;The &lt;strong&gt;main difference&lt;/strong&gt; between ITTAGE and TAGE is that in the T0 and Tn tables, Target PC data is added. During prediction, ITTAGE selects the Target from the matched, longest history entry as the prediction result, and uses a 2-bit saturating counter to decide whether to output this result or choose an alternative prediction result. For TAGE predictor details, please refer to &lt;a href=&#34;../02_tage_sc/&#34;&gt;TAGE-SC Branch Predictor&lt;/a&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
