<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Multi-language Support on UnityChip Verification</title>
    <link>https://open-verify.cc/mlvp/en/docs/multi-lang/</link>
    <description>Recent content in Multi-language Support on UnityChip Verification</description>
    <generator>Hugo</generator>
    <language>en</language>
    <atom:link href="https://open-verify.cc/mlvp/en/docs/multi-lang/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using C&#43;&#43;</title>
      <link>https://open-verify.cc/mlvp/en/docs/multi-lang/cpp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://open-verify.cc/mlvp/en/docs/multi-lang/cpp/</guid>
      <description>&lt;h2 id=&#34;principle-introduction&#34;&gt;Principle Introduction&lt;/h2&gt;&#xA;&lt;h3 id=&#34;basic-library&#34;&gt;Basic Library&lt;/h3&gt;&#xA;&lt;p&gt;In this chapter, we will introduce how to use Picker to compile RTL code into a C++ class and compile it into a dynamic library.&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;First, the Picker tool parses the RTL code, creates a new module based on the specified Top Module, encapsulates the module&amp;rsquo;s &lt;strong&gt;input and output ports&lt;/strong&gt;, and exports &lt;code&gt;DPI/API&lt;/code&gt; to operate the input ports and read the output ports.&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;em&gt;The tool determines the module to be encapsulated by specifying the file and Module Name of the Top Module. At this point, you can understand Top as the main function in software programming.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Using Java ...</title>
      <link>https://open-verify.cc/mlvp/en/docs/multi-lang/java/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://open-verify.cc/mlvp/en/docs/multi-lang/java/</guid>
      <description>&lt;p&gt;Currently, Picker supports C++/Python. Other languages such as Java, Golang, Javascript, Scala, etc., will be supported after the Python interface is stabilized.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
