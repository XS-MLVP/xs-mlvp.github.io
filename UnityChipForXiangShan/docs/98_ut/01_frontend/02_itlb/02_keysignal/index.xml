<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>关键信号说明 on 万众一芯之香山处理器</title>
    <link>https://open-verify.cc/UnityChipForXiangShan/docs/98_ut/01_frontend/02_itlb/02_keysignal/</link>
    <description>Recent content in 关键信号说明 on 万众一芯之香山处理器</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <atom:link href="https://open-verify.cc/UnityChipForXiangShan/docs/98_ut/01_frontend/02_itlb/02_keysignal/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>AsidLength</title>
      <link>https://open-verify.cc/UnityChipForXiangShan/docs/98_ut/01_frontend/02_itlb/02_keysignal/05_asidlen/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://open-verify.cc/UnityChipForXiangShan/docs/98_ut/01_frontend/02_itlb/02_keysignal/05_asidlen/</guid>
      <description>def AsidLength = coreParams.AsidLength // Parameters.scala: line 619 AsidLength: Int = 16 // Parameters.scala: line 79 ASID 位宽：16 位 作用：标识地址空间，防止进程/虚拟机虚拟地址冲突 支持规模： 最大 65536 个并发进程（16 位） 虚拟机通过 vmid 标识（14 位，支持 16384 个虚拟机，符合手册要求） </description>
    </item>
    <item>
      <title>相关 CSR 寄存器</title>
      <link>https://open-verify.cc/UnityChipForXiangShan/docs/98_ut/01_frontend/02_itlb/02_keysignal/01_csr/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://open-verify.cc/UnityChipForXiangShan/docs/98_ut/01_frontend/02_itlb/02_keysignal/01_csr/</guid>
      <description>val csr = Input(new TlbCsrBundle) csr：包含 satp、vsatp、hgatp 三个寄存器的信息以及一些权限信息。&#xA;class TlbCsrBundle(implicit p: Parameters) extends XSBundle { val satp = new TlbSatpBundle() val vsatp = new TlbSatpBundle() val hgatp = new TlbHgatpBundle() val priv = new Bundle { val mxr = Bool() val sum = Bool() val vmxr = Bool() val vsum = Bool() val virt = Bool() val spvp = UInt(1.W) val imode = UInt(2.W) val dmode = UInt(2.W) } override def toPrintable: Printable = { p&amp;#34;Satp mode:0x${Hexadecimal(satp.</description>
    </item>
    <item>
      <title>sfence</title>
      <link>https://open-verify.cc/UnityChipForXiangShan/docs/98_ut/01_frontend/02_itlb/02_keysignal/02_sfence/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://open-verify.cc/UnityChipForXiangShan/docs/98_ut/01_frontend/02_itlb/02_keysignal/02_sfence/</guid>
      <description>val sfence = Input(new SfenceBundle) sfence：用于传入 SfenceBundle，执行 SFENCE 指令刷新 TLB 缓存。&#xA;class SfenceBundle(implicit p: Parameters) extends XSBundle { val valid = Bool() val bits = new Bundle { val rs1 = Bool() val rs2 = Bool() val addr = UInt(VAddrBits.W) val id = UInt((AsidLength).W) // asid or vmid val flushPipe = Bool() val hv = Bool() val hg = Bool() } override def toPrintable: Printable = { p&amp;#34;valid:0x${Hexadecimal(valid)} rs1:${bits.rs1} rs2:${bits.rs2} addr:${Hexadecimal(bits.</description>
    </item>
    <item>
      <title>VAddrBits</title>
      <link>https://open-verify.cc/UnityChipForXiangShan/docs/98_ut/01_frontend/02_itlb/02_keysignal/04_vaddrbits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://open-verify.cc/UnityChipForXiangShan/docs/98_ut/01_frontend/02_itlb/02_keysignal/04_vaddrbits/</guid>
      <description>def VAddrBits = { if (HasHExtension) { if (EnableSv48) coreParams.GPAddrBitsSv48x4 else coreParams.GPAddrBitsSv39x4 } else { if (EnableSv48) coreParams.VAddrBitsSv48 else coreParams.VAddrBitsSv39 } } // Parameters.scala: line 596~608 // 相关参数定义 def HasHExtension = coreParams.HasHExtension // Parameters.scala: line582 coreParams.HasHExtension: Boolean = true // Parameters.scala: line66 coreParams.EnableSv48: Boolean = true // Parameters.scala: line91 // 地址位宽定义 coreParams.VAddrBitsSv39: Int = 39 coreParams.GPAddrBitsSv39x4: Int = 41 coreParams.VAddrBitsSv48: Int = 48 coreParams.GPAddrBitsSv48x4: Int = 50 // Parameters.scala: line71~74 香山昆明湖架构下的值：50 地址处理逻辑： 主机地址转换时仅使用后 48 位（前两位忽略） 支持虚拟机时，物理地址扩展为 50 位（符合 Sv48x4 规范） </description>
    </item>
    <item>
      <title>外部传入参数</title>
      <link>https://open-verify.cc/UnityChipForXiangShan/docs/98_ut/01_frontend/02_itlb/02_keysignal/03_para/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://open-verify.cc/UnityChipForXiangShan/docs/98_ut/01_frontend/02_itlb/02_keysignal/03_para/</guid>
      <description>参数说明 class TLB(Width: Int, nRespDups: Int = 1, Block: Seq[Boolean], q: TLBParameters)(implicit p: Parameters) extends TlbModule with HasCSRConst with HasPerfEvents 参数 说明 Width: Int 指示 requestor 的数量 nRespDups: Int = 1 需要复制 response 的数目，默认为 1（不复制） Block: Seq[Boolean] 指示每个 requestor 是否被阻塞 q: TLBParameters TLB 使用的参数 p: Parameter 全局参数（香山架构参数） 实例化 TLB 时以香山架构的 itlb 为例：&#xA;val itlb = Module(new TLB(coreParams.itlbPortNum, nRespDups = 1, Seq.fill(PortNumber)(false) ++ Seq(true), itlbParams)) Width 值为 coreParams.itlbParams（实际计算逻辑）：&#xA;itlbPortNum: Int = ICacheParameters().</description>
    </item>
  </channel>
</rss>
